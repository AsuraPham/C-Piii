// This file is used by Code Analysis to maintain SuppressMessage
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given
// a specific target and scoped to a namespace, type, member, etc.

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1309:Field '_e' must not begin with an underscore", Justification = "<Pending>", Scope = "member", Target = "~F:Codaxy.WkHtmlToPdf.PdfConvert._e")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1203:Constant fields must appear before non-constant fields", Justification = "<Pending>", Scope = "member", Target = "~F:Merit.Invoicing.Excel.KrogerExcelGenerator.OutputDirectory")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1401:Field must be private", Justification = "<Pending>", Scope = "member", Target = "~F:Merit.Invoicing.Excel.KrogerExcelGenerator.TemplatePath")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1507:Code must not contain multiple blank lines in a row", Justification = "<Pending>", Scope = "member", Target = "~M:Codaxy.WkHtmlToPdf.PdfConvert.ConvertHtmlToPdf(Codaxy.WkHtmlToPdf.PdfDocument,Codaxy.WkHtmlToPdf.PdfConvertSection,Codaxy.WkHtmlToPdf.PdfOutput)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1503:Braces must not be omitted", Justification = "<Pending>", Scope = "member", Target = "~M:Codaxy.WkHtmlToPdf.PdfConvert.ConvertHtmlToPdf(Codaxy.WkHtmlToPdf.PdfDocument,Codaxy.WkHtmlToPdf.PdfConvertSection,Codaxy.WkHtmlToPdf.PdfOutput)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1501:Statement must not be on a single line", Justification = "<Pending>", Scope = "member", Target = "~M:Codaxy.WkHtmlToPdf.PdfConvert.ConvertHtmlToPdf(Codaxy.WkHtmlToPdf.PdfDocument,Codaxy.WkHtmlToPdf.PdfConvertSection,Codaxy.WkHtmlToPdf.PdfOutput)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1502:Element must not be on a single line", Justification = "<Pending>", Scope = "member", Target = "~M:Codaxy.WkHtmlToPdf.PdfConvertException.#ctor(System.String)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1502:Element must not be on a single line", Justification = "<Pending>", Scope = "member", Target = "~M:Codaxy.WkHtmlToPdf.PdfConvertTimeoutException.#ctor")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1027:Tabs must not be used.", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.BundleConfig.RegisterBundles(System.Web.Optimization.BundleCollection)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1005:Single line comment must begin with a space.", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.BundleConfig.RegisterBundles(System.Web.Optimization.BundleCollection)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1119:Statement must not use unnecessary parenthesis", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Controllers.GetController.SearchCustomersView(System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean})~System.Web.Mvc.ActionResult")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1503:Braces must not be omitted", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Controllers.GetController.UnloadingInvoiceView(System.Guid,System.Boolean)~System.Web.Mvc.ActionResult")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1123:Region must not be located within a code element.", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.GenerateActivityInvoiceReport(Merit.Components.Invoices.Domain.ReportModel.Activity.ActivityInvoiceModel)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1503:Braces must not be omitted", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.GenerateActivityInvoiceReport(Merit.Components.Invoices.Domain.ReportModel.Activity.ActivityInvoiceModel)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1503:Braces must not be omitted", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.GenerateDepartmentInvoiceReport(Merit.Components.Invoices.Domain.ReportModel.Department.DepartmentInvoiceModel)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1407:Arithmetic expressions must declare precedence", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.GenerateDepartmentInvoiceReport(Merit.Components.Invoices.Domain.ReportModel.Department.DepartmentInvoiceModel)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1507:Code must not contain multiple blank lines in a row", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.GenerateDepartmentInvoiceReport(Merit.Components.Invoices.Domain.ReportModel.Department.DepartmentInvoiceModel)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1003:Operator '-' must be preceded by whitespace.", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.GenerateDepartmentInvoiceReport(Merit.Components.Invoices.Domain.ReportModel.Department.DepartmentInvoiceModel)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1123:Region must not be located within a code element.", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.GenerateDepartmentInvoiceReport(Merit.Components.Invoices.Domain.ReportModel.Department.DepartmentInvoiceModel)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1028:Code must not contain trailing whitespace", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.GenerateDepartmentInvoiceReport(Merit.Components.Invoices.Domain.ReportModel.Department.DepartmentInvoiceModel)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1505:An opening brace must not be followed by a blank line.", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.GenerateDepartmentInvoiceReport(Merit.Components.Invoices.Domain.ReportModel.Department.DepartmentInvoiceModel)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1407:Arithmetic expressions must declare precedence", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.GenerateDlsInvoiceReport(Merit.Components.Invoices.Domain.ReportModel.DLS.DlsInvoiceModel)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1123:Region must not be located within a code element.", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.GenerateDlsInvoiceReport(Merit.Components.Invoices.Domain.ReportModel.DLS.DlsInvoiceModel)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1503:Braces must not be omitted", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.GenerateDlsInvoiceReport(Merit.Components.Invoices.Domain.ReportModel.DLS.DlsInvoiceModel)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1123:Region must not be located within a code element.", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.GenerateSelectionInvoiceReport(Merit.Components.Invoices.Domain.ReportModel.Selection.SelectionInvoiceModel)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1503:Braces must not be omitted", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.GenerateSelectionInvoiceReport(Merit.Components.Invoices.Domain.ReportModel.Selection.SelectionInvoiceModel)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1503:Braces must not be omitted", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.GenerateUnloadingInvoiceReport(Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingInvoiceModel)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1000:The keyword 'if' must be followed by a space.", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.GenerateUnloadingInvoiceReport(Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingInvoiceModel)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1005:Single line comment must begin with a space.", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.GenerateUnloadingInvoiceReport(Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingInvoiceModel)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1123:Region must not be located within a code element.", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.GenerateUnloadingInvoiceReport(Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingInvoiceModel)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1028:Code must not contain trailing whitespace", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.GenerateUnloadingInvoiceReport(Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingInvoiceModel)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1503:Braces must not be omitted", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.getImage(System.String)~System.Drawing.Image")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1300:Element 'getImage' must begin with an uppercase letter", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.getImage(System.String)~System.Drawing.Image")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1503:Braces must not be omitted", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.putImageToWorksheet(OfficeOpenXml.ExcelWorksheet,System.Drawing.Image,System.Int32,System.Int32,System.Nullable{System.Int32})~OfficeOpenXml.Drawing.ExcelPicture")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1300:Element 'putImageToWorksheet' must begin with an uppercase letter", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.ExportInvoiceReportToExcel.putImageToWorksheet(OfficeOpenXml.ExcelWorksheet,System.Drawing.Image,System.Int32,System.Int32,System.Nullable{System.Int32})~OfficeOpenXml.Drawing.ExcelPicture")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1300:Element 'addMainInvoiceLine' must begin with an uppercase letter", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.KrogerExcelGenerator.addMainInvoiceLine(OfficeOpenXml.ExcelWorksheet,System.Int32,Merit.Invoicing.Excel.MainInvoiceLoadItem)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1300:Element 'addSummaryLine' must begin with an uppercase letter", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.KrogerExcelGenerator.addSummaryLine(OfficeOpenXml.ExcelWorksheet,Merit.Invoicing.Excel.SummaryLineItem)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1005:Single line comment must begin with a space.", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.KrogerExcelGenerator.addWorkOrderLine(OfficeOpenXml.ExcelWorksheet,Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingWorkOrderModel)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1300:Element 'addWorkOrderLine' must begin with an uppercase letter", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.KrogerExcelGenerator.addWorkOrderLine(OfficeOpenXml.ExcelWorksheet,Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingWorkOrderModel)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1119:Statement must not use unnecessary parenthesis", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.KrogerExcelGenerator.buildMainInvoiceSubTable(Merit.Components.Invoices.Domain.ReportModel.Unloading.KrogerUnloadingInvoiceModel,OfficeOpenXml.ExcelWorksheet,System.Int32,System.Collections.Generic.IEnumerable{Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingWorkOrderModel},System.String)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1122:Use string.Empty for empty strings", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.KrogerExcelGenerator.buildMainInvoiceSubTable(Merit.Components.Invoices.Domain.ReportModel.Unloading.KrogerUnloadingInvoiceModel,OfficeOpenXml.ExcelWorksheet,System.Int32,System.Collections.Generic.IEnumerable{Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingWorkOrderModel},System.String)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1300:Element 'buildMainInvoiceSubTable' must begin with an uppercase letter", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.KrogerExcelGenerator.buildMainInvoiceSubTable(Merit.Components.Invoices.Domain.ReportModel.Unloading.KrogerUnloadingInvoiceModel,OfficeOpenXml.ExcelWorksheet,System.Int32,System.Collections.Generic.IEnumerable{Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingWorkOrderModel},System.String)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1300:Element 'buildSummarySubTable' must begin with an uppercase letter", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.KrogerExcelGenerator.buildSummarySubTable(Merit.Components.Invoices.Domain.ReportModel.Unloading.KrogerUnloadingInvoiceModel,OfficeOpenXml.ExcelWorksheet,System.Int32,System.Collections.Generic.IEnumerable{Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingWorkOrderModel},System.String)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1118:The parameter spans multiple lines", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.KrogerExcelGenerator.buildSummarySubTable(Merit.Components.Invoices.Domain.ReportModel.Unloading.KrogerUnloadingInvoiceModel,OfficeOpenXml.ExcelWorksheet,System.Int32,System.Collections.Generic.IEnumerable{Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingWorkOrderModel},System.String)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1119:Statement must not use unnecessary parenthesis", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.KrogerExcelGenerator.buildSummarySubTable(Merit.Components.Invoices.Domain.ReportModel.Unloading.KrogerUnloadingInvoiceModel,OfficeOpenXml.ExcelWorksheet,System.Int32,System.Collections.Generic.IEnumerable{Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingWorkOrderModel},System.String)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1300:Element 'createMainInvoiceWorksheet' must begin with an uppercase letter", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.KrogerExcelGenerator.createMainInvoiceWorksheet(Merit.Components.Invoices.Domain.ReportModel.Unloading.KrogerUnloadingInvoiceModel,OfficeOpenXml.ExcelWorksheets)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1028:Code must not contain trailing whitespace", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.KrogerExcelGenerator.createMainInvoiceWorksheet(Merit.Components.Invoices.Domain.ReportModel.Unloading.KrogerUnloadingInvoiceModel,OfficeOpenXml.ExcelWorksheets)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1300:Element 'createSummaryWorksheet' must begin with an uppercase letter", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.KrogerExcelGenerator.createSummaryWorksheet(Merit.Components.Invoices.Domain.ReportModel.Unloading.KrogerUnloadingInvoiceModel,OfficeOpenXml.ExcelWorksheets)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1300:Element 'createUnloadActivityWorksheets' must begin with an uppercase letter", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.KrogerExcelGenerator.createUnloadActivityWorksheets(Merit.Components.Invoices.Domain.ReportModel.Unloading.KrogerUnloadingInvoiceModel,OfficeOpenXml.ExcelWorksheets,OfficeOpenXml.ExcelWorksheet)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1119:Statement must not use unnecessary parenthesis", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.KrogerExcelGenerator.populateUnloadActivitySheet(OfficeOpenXml.ExcelWorksheet,System.Collections.Generic.IList{Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingWorkOrderModel})")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1300:Element 'populateUnloadActivitySheet' must begin with an uppercase letter", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.KrogerExcelGenerator.populateUnloadActivitySheet(OfficeOpenXml.ExcelWorksheet,System.Collections.Generic.IList{Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingWorkOrderModel})")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1028:Code must not contain trailing whitespace", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.KrogerExcelGenerator.SetRowValues(OfficeOpenXml.ExcelWorksheet,System.Int32,System.Int32,System.Object[])")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1300:Element 'workOrdersByReferenceCode' must begin with an uppercase letter", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.KrogerExcelGenerator.workOrdersByReferenceCode(System.Collections.Generic.IEnumerable{Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingWorkOrderModel})~System.Collections.Generic.IEnumerable{System.Linq.IGrouping{System.String,Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingWorkOrderModel}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1300:Element 'workOrdersChargedToCarrier' must begin with an uppercase letter", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.KrogerExcelGenerator.workOrdersChargedToCarrier(System.Collections.Generic.IEnumerable{Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingWorkOrderModel},Merit.Components.Invoices.Domain.ReportModel.Unloading.KrogerUnloadingInvoiceModel)~System.Collections.Generic.IEnumerable{Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingWorkOrderModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1300:Element 'workOrdersChargedToClient' must begin with an uppercase letter", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.KrogerExcelGenerator.workOrdersChargedToClient(System.Collections.Generic.IEnumerable{Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingWorkOrderModel},Merit.Components.Invoices.Domain.ReportModel.Unloading.KrogerUnloadingInvoiceModel)~System.Collections.Generic.IEnumerable{Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingWorkOrderModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1028:Code must not contain trailing whitespace", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Excel.KrogerExcelGenerator.workOrdersChargedToClient(System.Collections.Generic.IEnumerable{Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingWorkOrderModel},Merit.Components.Invoices.Domain.ReportModel.Unloading.KrogerUnloadingInvoiceModel)~System.Collections.Generic.IEnumerable{Merit.Components.Invoices.Domain.ReportModel.Unloading.UnloadingWorkOrderModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1505:An opening brace must not be followed by a blank line.", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Pdf.PdfGenerator.GenerateStandardUnloadingInvoice")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1508:A closing brace must not be preceded by a blank line.", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Pdf.PdfGenerator.GenerateStandardUnloadingInvoice")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1005:Single line comment must begin with a space.", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Pdf.PdfGenerator.GetPdfByteStream(System.String)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1122:Use string.Empty for empty strings", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Pdf.PdfGenerator.GetPdfByteStream(System.String)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1118:The parameter spans multiple lines", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Pdf.PdfGenerator.TryRunWkhtml(System.String,System.String)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1001:Commas must not be preceded by whitespace.", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Pdf.PdfGenerator.TryRunWkhtml(System.String,System.String)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1113:Comma must be on the same line as previous parameter.", Justification = "<Pending>", Scope = "member", Target = "~M:Merit.Invoicing.Pdf.PdfGenerator.TryRunWkhtml(System.String,System.String)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1508:A closing brace must not be preceded by a blank line.", Justification = "<Pending>", Scope = "namespace", Target = "~N:Merit.Invoicing")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Codaxy.WkHtmlToPdf.PdfConvertSection.Arguments")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Codaxy.WkHtmlToPdf.PdfConvertSection.BinaryPath")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Codaxy.WkHtmlToPdf.PdfConvertSection.Debug")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Codaxy.WkHtmlToPdf.PdfConvertSection.TempFolderPath")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Codaxy.WkHtmlToPdf.PdfConvertSection.Timeout")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Codaxy.WkHtmlToPdf.PdfDocument.FooterUrl")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Codaxy.WkHtmlToPdf.PdfDocument.HeaderUrl")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Codaxy.WkHtmlToPdf.PdfDocument.State")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Codaxy.WkHtmlToPdf.PdfOutput.OutputCallback")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Codaxy.WkHtmlToPdf.PdfOutput.OutputStream")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Merit.Invoicing.Excel.MainInvoiceLoadItem.Amount")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Merit.Invoicing.Excel.MainInvoiceLoadItem.BillTo")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Merit.Invoicing.Excel.MainInvoiceLoadItem.InvoiceNum")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Merit.Invoicing.Excel.MainInvoiceLoadItem.RebateCreditNum")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Merit.Invoicing.Excel.MainInvoiceLoadItem.WeekEnd")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Merit.Invoicing.Excel.MainInvoiceLoadItem.WeekStart")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Merit.Invoicing.Excel.SummaryLineItem.EmphasizeName")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Merit.Invoicing.Excel.SummaryLineItem.EmphasizeValue")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Merit.Invoicing.Excel.SummaryLineItem.InvoiceNumber")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Merit.Invoicing.Excel.SummaryLineItem.IsFormula")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Merit.Invoicing.Excel.SummaryLineItem.NumberFormat")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Merit.Invoicing.Excel.SummaryLineItem.Value")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1516:Elements must be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:Merit.Invoicing.InvoiceGenerationSettings.KrogerInvoiceTemplatePath")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1508:A closing brace must not be preceded by a blank line.", Justification = "<Pending>", Scope = "type", Target = "~T:Codaxy.WkHtmlToPdf.PdfConvertArgumentSection")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1505:An opening brace must not be followed by a blank line.", Justification = "<Pending>", Scope = "type", Target = "~T:Codaxy.WkHtmlToPdf.PdfConvertArgumentSection")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "SA1508:A closing brace must not be preceded by a blank line.", Justification = "<Pending>", Scope = "type", Target = "~T:Merit.Invoicing.Pdf.PdfGenerator")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2202:Do not dispose objects multiple times", Scope = "member", Target = "Codaxy.WkHtmlToPdf.PdfConvert.#ConvertHtmlToPdf(Codaxy.WkHtmlToPdf.PdfDocument,Codaxy.WkHtmlToPdf.PdfConvertSection,Codaxy.WkHtmlToPdf.PdfOutput)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2237:MarkISerializableTypesWithSerializable", Scope = "type", Target = "Codaxy.WkHtmlToPdf.PdfConvertException")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA1801:ReviewUnusedParameters", MessageId = "bundles", Scope = "member", Target = "Merit.Invoicing.BundleConfig.#RegisterBundles(System.Web.Optimization.BundleCollection)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA1801:ReviewUnusedParameters", MessageId = "app", Scope = "member", Target = "Merit.Invoicing.Startup.#Configuration(Owin.IAppBuilder)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA1801:ReviewUnusedParameters", MessageId = "mockData", Scope = "member", Target = "Merit.Invoicing.Controllers.GetController.#DlsInvoiceExcel(System.Guid,System.Boolean)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1804:RemoveUnusedLocals", MessageId = "e", Scope = "member", Target = "Merit.Invoicing.Controllers.GetController.#SendInvoice(Merit.Components.Invoices.Domain.Entities.Invoice)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA1801:ReviewUnusedParameters", MessageId = "mockData", Scope = "member", Target = "Merit.Invoicing.Controllers.GetController.#UnloadingInvoiceExcel(System.Guid,System.Boolean)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA1801:ReviewUnusedParameters", MessageId = "mockData", Scope = "member", Target = "Merit.Invoicing.Controllers.GetController.#UnloadingInvoiceFile(System.Guid,System.Boolean)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA1801:ReviewUnusedParameters", MessageId = "mockData", Scope = "member", Target = "Merit.Invoicing.Controllers.GetController.#UnloadingInvoiceView(System.Guid,System.Boolean)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1804:RemoveUnusedLocals", MessageId = "allOrders", Scope = "member", Target = "Merit.Invoicing.Excel.KrogerExcelGenerator.#createMainInvoiceWorksheet(Merit.Components.Invoices.Domain.ReportModel.Unloading.KrogerUnloadingInvoiceModel,OfficeOpenXml.ExcelWorksheets)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.MaintainabilityRules", "SA1404:Code analysis suppression must have justification", Justification = "<Pending>")]